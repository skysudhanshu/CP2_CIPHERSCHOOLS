/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head)
    {
      ListNode *curr = head;
        vector <int> v;
        if(head == NULL)
            return NULL;
        v.push_back(head->val);
        while(curr->next != NULL){
            auto it = find(v.begin(), v.end(), curr->next->val);
            if(it == v.end()){
                v.push_back(curr->next->val);
                curr = curr->next;
                
            }
            else{
                curr->next = curr->next->next;
            }  
        
        }        
        return head;  
    }
};
